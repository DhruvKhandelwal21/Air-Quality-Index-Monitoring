[{"C:\\Users\\HP\\Videos\\aqiapp-master\\src\\index.js":"1","C:\\Users\\HP\\Videos\\aqiapp-master\\src\\App.js":"2","C:\\Users\\HP\\Videos\\aqiapp-master\\src\\SearchCity.js":"3","C:\\Users\\HP\\Videos\\aqiapp-master\\src\\AqiConst.js":"4","C:\\Users\\HP\\Videos\\aqiapp-master\\src\\AQIAPI.js":"5","C:\\Users\\HP\\Videos\\aqiapp-master\\src\\CityList.js":"6","C:\\Users\\HP\\Videos\\aqiapp-master\\src\\ShowCity.js":"7","C:\\Users\\HP\\Videos\\aqiapp-master\\src\\CityDetails.js":"8","C:\\Users\\HP\\Videos\\aqiapp-master\\src\\AiqiDetails.js":"9"},{"size":150,"mtime":1656207504000,"results":"10","hashOfConfig":"11"},{"size":187,"mtime":1674287325772,"results":"12","hashOfConfig":"11"},{"size":3924,"mtime":1674455129117,"results":"13","hashOfConfig":"11"},{"size":202,"mtime":1656207504000,"results":"14","hashOfConfig":"11"},{"size":1301,"mtime":1674455195689,"results":"15","hashOfConfig":"11"},{"size":1091,"mtime":1674455189985,"results":"16","hashOfConfig":"11"},{"size":3152,"mtime":1674456549364,"results":"17","hashOfConfig":"11"},{"size":712,"mtime":1656207504000,"results":"18","hashOfConfig":"11"},{"size":3472,"mtime":1674287563717,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1p6nl08",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"C:\\Users\\HP\\Videos\\aqiapp-master\\src\\index.js",[],["40","41"],"C:\\Users\\HP\\Videos\\aqiapp-master\\src\\App.js",[],"C:\\Users\\HP\\Videos\\aqiapp-master\\src\\SearchCity.js",["42"],"C:\\Users\\HP\\Videos\\aqiapp-master\\src\\AqiConst.js",[],"C:\\Users\\HP\\Videos\\aqiapp-master\\src\\AQIAPI.js",[],"C:\\Users\\HP\\Videos\\aqiapp-master\\src\\CityList.js",[],"C:\\Users\\HP\\Videos\\aqiapp-master\\src\\ShowCity.js",[],"C:\\Users\\HP\\Videos\\aqiapp-master\\src\\CityDetails.js",[],"C:\\Users\\HP\\Videos\\aqiapp-master\\src\\AiqiDetails.js",["43"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Detailcontainer = styled.div`\ndisplay:flex;\nalign-content:center;\nflex-direction: column;\nflex-wrap: wrap;\nmargin-top: 1rem;\n`;\nconst Li = styled.li`\ndisplay:flex;\nalign-content:center;\nalign-items: center;\nflex-wrap: wrap;\njustify-content: center;\nmargin: 1rem 0;\nborder-radius: 10px;\nwidth:80%;\nheight: 10vh;\nbackground-color:  ${props => props.setColor ? props.setColor : \"white\"};\ncolor: ${props => props.setColor!==\"white\" ? \"white\" : \"black\"};\nborder-color: ${props => props.setColor!==\"white\" ? props.setColor : \"black\"};\nborder: 1px solid;\n\nfont-family: Montserrat;\n  font-size:1rem;\n  font-weight: bold;\n`;\nconst AiqiDetails = (props) => {\n    let cityDetails= {};\n  if(props.dinfo.iaqi){\n    cityDetails = props.dinfo.iaqi;\n  }\n    const names = {\n        'pm25': \"particulate matter 2.5(pm 2.5)\",\n        'pm10': \"particulate matter 10(pm 10)\",\n        'o3': \"Ozone\",\n        'no2': \"Nitrogen Dioxide\",\n        'so2': \"Sulphur Dioxide\",\n        'co': \"Carbon Monoxyde\",\n        't': \"Temperature\",\n        'w': \"Wind\",\n        'r': \"Rain (precipitation)\",\n        'h': \"Relative Humidity\",\n        'd': \"Dew\",\n        'p': \"Atmostpheric Pressure\"\n    }\n    const getSpectrum = (iaqi) => {\n        \n        let ret = [];\n        Object.entries(iaqi).map(function(item) {\n            let obj = {};\n            let key = names[item[0]] ? names[item[0]] : item[0];\n            obj['key'] = key;\n            obj['value'] = item[1].v;\n            ret.push(obj);\n        });\n        return ret;\n    }\n\n    const colorize = (name, value) => {\n        if ([\n            'particulate matter 2.5(pm 2.5)', \n            'particulate matter 10(pm 10)',\n            'Ozone',\n            'Nitrogen Dioxide',\n            'Sulphur Dioxide',\n            'Carbon Monoxide'].indexOf(name) < 0) {\n                return 'white';\n            }\n        if (value >= 0 && value <= 50) {\n            return 'green';\n        } else if (value >= 51 && value <= 100) {\n            return 'yellow';\n        } else if (value >= 101 && value <= 150) {\n            return 'orange';\n        } else if (value >= 151 && value <= 200) {\n            return 'red';\n        } else if (value >= 201 && value <= 300) {\n            return 'purple';\n        } else if (value >= 301) {\n            return 'maroon';\n        }\n    }\n\n    \n\n    return(\n        <Detailcontainer>\n        \n        {\n                            getSpectrum(cityDetails).map((spectrum, i) => (\n                                <Li key={i} setColor =  {colorize(spectrum.key, spectrum.value)}>\n                                    \n                                    <span>{spectrum.key}</span>: <span>{spectrum.value}</span>\n                                   \n                                    \n                                </Li>\n                            ))\n                        }\n                        {/* {\n                            getSpectrum(cityDetails).map((spectrum, i) => (\n                                <Li key={i}>\n                                    <div setColor =  className={`dot ${colorize(spectrum.key, spectrum.value)}`}></div>\n                                    <span>{spectrum.key}</span>: <span>{spectrum.value}</span>\n                                </Li>\n                            ))\n                        } */}\n                    \n           \n\n        </Detailcontainer>\n    );\n}\nexport default AiqiDetails;",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":62,"column":9,"nodeType":"50","messageId":"51","endLine":62,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":52,"column":34,"nodeType":"54","messageId":"55","endLine":52,"endColumn":42},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'cityInputIsInvalid' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]